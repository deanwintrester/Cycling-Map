name: Publish GitHub Pages

# Controls when the action will run. 
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ main ]
    paths:
      - .github/workflows/gh-pages.yml
      - package.json
      - yarn.lock
      - gatsby-config.js
      - gatsby-node.js
      - assets/*.svg
      - src/**.js
      - src/**.jsx
      - src/**.scss
      - src/**.json
  workflow_dispatch:
    inputs:
      latitude:
        description: 'Latitude'
      longitude:
        description: 'Longitude'
      address:
        description: 'Address'
      time:
        description: 'Time'
env:
  RUN_TYPE: coros # support strava/coros/keep
  ATHLETE: Dean Dao
  GITHUB_NAME: deanwintrester # change to yours
  GITHUB_EMAIL: dean189340@gmail.com # change to yours
  SAVE_DATA_IN_GITHUB_CACHE: ture
  NODE_OPTIONS: --openssl-legacy-provider
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Configure pip cache
        uses: actions/cache@v1
        id: pip-cache
        with:
          path: venv
          key: pip-1-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        if: steps.pip-cache.outputs.cache-hit != 'true'
      # - name: Run sync Strava script
      #   run: |
      #     python scripts/strava_sync.py ${{ secrets.STRAVA_CLIENT_ID }} ${{ secrets.STRAVA_CLIENT_SECRET }} ${{ secrets.STRAVA_CLIENT_REFRESH_TOKEN }}
      - name: Add safe directory
        run: git config --global --add safe.directory /home/runner/work/Cycling-Map/Cycling-Map

      - name: Check and set repository ownership
        run: |
          # 使用环境变量检查当前所有权
          echo "Current ownership of $GITHUB_WORKSPACE:"
          ls -ld $GITHUB_WORKSPACE
      
          # 切换到runner用户，这通常是GitHub Actions的运行器用户
          sudo chown -R $(whoami) $GITHUB_WORKSPACE
      
          # 再次检查所有权以确认更改
          echo "Updated ownership of $GITHUB_WORKSPACE:"
          ls -ld $GITHUB_WORKSPACE
      
      - name: Push new ride
        uses: github-actions-x/commit@v2.6
        with:
          github-token: ${{ secrets.ACCESS_TOKEN }}
          commit-message: "Add new rides"
          rebase: 'true'
          name: 'GitHub Action'
          email: 'actions@github.com'
      

      
      # - name: Push new runs
      #   if: env.SAVE_DATA_IN_GITHUB_CACHE != 'true'
      #   run: |
      #     git config --local user.email "${{ env.GITHUB_EMAIL }}"
      #     git config --local user.name "${{ env.GITHUB_NAME }}"
      #     git add .
      #     git commit -m 'update new runs' || echo "nothing to commit"
      #     git push || echo "nothing to push"
          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4

      - name: Update dependencies # 新增步骤：更新依赖项
        run: |
          yarn upgrade gatsby gatsby-plugin-postcss postcss postcss-loader
      
      - run: |
          node script.js '${{ github.event.inputs.latitude }}' '${{ github.event.inputs.longitude }}' '${{ github.event.inputs.address }}' '${{ github.event.inputs.time }}'

      # - name: Set Node.js options
      #   run: |
      #     echo "NODE_OPTIONS=--openssl-legacy-provider" >> $GITHUB_ENV
      #   shell: bash

          
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: |
          yarn install
      
      - run: |
          yarn build --prefix-paths

      - name: GitHub Pages
        uses: crazy-max/ghaction-github-pages@v2.2.0
        with:
          # Git branch where site will be deployed
          target_branch: gh-pages
          # Create incremental commit instead of doing push force
          keep_history: true
          # Build directory to deploy
          build_dir: public
          # Write the given domain name to the CNAME file
          #fqdn: custom.domain.name # optional
          # Prevent Jekyll from building the site
          jekyll: false
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
